{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ARLEY\\\\Desktop\\\\Reto-Final-Crud\\\\kata-crud-refactoring\\\\front\\\\src\\\\Componentes\\\\FormTodo.js\";\nimport React, { useContext, useState, useRef, Fragment } from \"react\";\nimport { HOST_API } from \"../Componentes/reducer\";\nimport { Store } from \"../Componentes/Store\";\nimport \"./Styles.css\";\nexport const FormTodo = ({\n  groupListId\n}) => {\n  const formRef = useRef(null);\n  const {\n    dispatch,\n    state: {\n      todo\n    }\n  } = useContext(Store);\n  const item = todo.item;\n  const [state, setState] = useState(item);\n  /**\r\n   *\r\n   * nuevo\r\n   */\n\n  const onAdd = event => {\n    event.preventDefault();\n    const request = {\n      name: state.name,\n      id: null,\n      completed: false\n    };\n    fetch(HOST_API + \"/todo\", {\n      method: \"POST\",\n      mode: \"cors\",\n      body: JSON.stringify(request),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      //duda\n      credentials: \"same-origin\"\n    }).then(response => response.json()).then(todo => {\n      dispatch({\n        type: \"add-item\",\n        item: todo\n      });\n      setState({\n        name: \"\"\n      });\n      formRef.current.reset();\n    });\n  };\n\n  const onEdit = event => {\n    event.preventDefault();\n    const request = {\n      name: state.name,\n      id: item.id,\n      isCompleted: item.isCompleted,\n      groupListId: groupListId\n    };\n    fetch(HOST_API + \"/todo\", {\n      method: \"PUT\",\n      mode: \"cors\",\n      body: JSON.stringify(request),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      //duda\n      credentials: \"same-origin\"\n    }).then(response => response.json()).then(todo => {\n      dispatch({\n        type: \"update-item\",\n        item: todo\n      });\n      setState({\n        name: \"\"\n      });\n      formRef.current.reset();\n    });\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    ref: formRef,\n    className: \"InArriba\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"Input\",\n    type: \"text\",\n    name: \"name\",\n    placeholder: \"\\xBFQu\\xE9 piensas hacer hoy?\",\n    defaultValue: item.groupListId === groupListId ? item.name : \"\",\n    onChange: event => {\n      setState({ ...state,\n        name: event.target.value\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), item.id && item.groupListId === groupListId && React.createElement(\"button\", {\n    className: \"updateButton\",\n    onClick: onEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Actualizar\"), !item.id && React.createElement(\"button\", {\n    disabled: isDisabled,\n    className: \"CreateButton\",\n    onClick: onAdd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"Crear\")), isDisabled && hasWritten && React.createElement(\"span\", {\n    className: \"MinimunLength\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Minimo 4 caracteres\"));\n};\nexport default FormTodo;","map":{"version":3,"sources":["C:/Users/ARLEY/Desktop/Reto-Final-Crud/kata-crud-refactoring/front/src/Componentes/FormTodo.js"],"names":["React","useContext","useState","useRef","Fragment","HOST_API","Store","FormTodo","groupListId","formRef","dispatch","state","todo","item","setState","onAdd","event","preventDefault","request","name","id","completed","fetch","method","mode","body","JSON","stringify","headers","credentials","then","response","json","type","current","reset","onEdit","isCompleted","target","value","isDisabled","hasWritten"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useRef, Fragment } from \"react\";\r\nimport { HOST_API } from \"../Componentes/reducer\";\r\nimport { Store } from \"../Componentes/Store\";\r\nimport \"./Styles.css\";\r\n\r\nexport const FormTodo = ({ groupListId }) => {\r\n  const formRef = useRef(null);\r\n\r\n  const {dispatch, state: { todo },} = useContext(Store);\r\n  const item = todo.item;\r\n  const [state, setState] = useState(item);\r\n  /**\r\n   *\r\n   * nuevo\r\n   */\r\n  \r\n\r\n  const onAdd = (event) => {\r\n    event.preventDefault();\r\n   \r\n\r\n    const request = {\r\n      name: state.name,\r\n      id: null,\r\n      completed: false,\r\n     \r\n    };\r\n\r\n    fetch(HOST_API + \"/todo\", {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      body: JSON.stringify(request),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      //duda\r\n      credentials: \"same-origin\",\r\n    })\r\n      .then((response) => response.json())\r\n      .then((todo) => {\r\n        dispatch({ type: \"add-item\", item: todo });\r\n        setState({ name: \"\" });\r\n        formRef.current.reset();\r\n      });\r\n  };\r\n\r\n  const onEdit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const request = {\r\n      name: state.name,\r\n      id: item.id,\r\n      isCompleted: item.isCompleted,\r\n      groupListId: groupListId,\r\n    };\r\n\r\n    fetch(HOST_API + \"/todo\", {\r\n      method: \"PUT\",\r\n      mode: \"cors\",\r\n      body: JSON.stringify(request),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      //duda\r\n      credentials: \"same-origin\",\r\n    })\r\n      .then((response) => response.json())\r\n      .then((todo) => {\r\n        dispatch({ type: \"update-item\", item: todo });\r\n        setState({ name: \"\" });\r\n        formRef.current.reset();\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <form ref={formRef} className=\"InArriba\">\r\n        <input\r\n          className=\"Input\"\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"¿Qué piensas hacer hoy?\"\r\n          defaultValue={item.groupListId === groupListId ? item.name : \"\"}\r\n          onChange={(event) => {\r\n          \r\n            \r\n            setState({ ...state, name: event.target.value });\r\n          }}\r\n        />\r\n          {item.id && item.groupListId === groupListId && <button className=\"updateButton\" onClick={onEdit}>Actualizar</button>}\r\n    {!item.id && <button disabled={isDisabled} className='CreateButton' onClick={onAdd}>Crear</button>}\r\n      </form>\r\n      {isDisabled && hasWritten && <span className=\"MinimunLength\">Minimo 4 caracteres</span>}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default FormTodo;\r\n"]},"metadata":{},"sourceType":"module"}