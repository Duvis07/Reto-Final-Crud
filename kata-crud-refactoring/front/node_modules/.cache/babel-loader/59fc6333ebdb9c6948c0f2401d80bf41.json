{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ARLEY\\\\Desktop\\\\Reto-Final-Crud\\\\kata-crud-refactoring\\\\front\\\\src\\\\Componentes\\\\FormTodo.js\";\nimport React, { useContext, useState, useRef, Fragment } from \"react\";\nimport { HOST_API } from \"../Componentes/reducer\";\nimport { Store } from \"../Componentes/Store\";\nimport \"./Styles.css\";\nexport const FormTodo = ({\n  groupList\n}) => {\n  const formRef = useRef(null);\n  const {\n    dispatch,\n    state: {\n      todo\n    }\n  } = useContext(Store);\n  const item = todo.item;\n  const [state, setState] = useState(item);\n  /**\r\n   *\r\n   * nuevo\r\n   */\n\n  const [isDisabled, setIsDisabled] = useState(true);\n  const [hasWritten, sethasWritten] = useState(false);\n\n  const onAdd = event => {\n    event.preventDefault();\n    /**\r\n     * nuevo\r\n     */\n\n    setIsDisabled(true);\n    sethasWritten(false);\n    const request = {\n      name: state.name,\n      id: null,\n      completed: false,\n\n      /**\r\n       * nuevo\r\n       */\n      groupListId: groupListId\n    };\n    fetch(HOST_API + \"/todo\", {\n      method: \"POST\",\n      mode: \"cors\",\n      body: JSON.stringify(request),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      //duda\n      credentials: \"same-origin\"\n    }).then(response => response.json()).then(todo => {\n      dispatch({\n        type: \"add-item\",\n        item: todo\n      });\n      setState({\n        name: \"\"\n      });\n      formRef.current.reset();\n    });\n  };\n\n  const onEdit = event => {\n    event.preventDefault();\n    const request = {\n      name: state.name,\n      id: item.id,\n      isCompleted: item.isCompleted,\n      groupListId: groupListId\n    };\n    fetch(HOST_API + \"/todo\", {\n      method: \"PUT\",\n      mode: \"cors\",\n      body: JSON.stringify(request),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      //duda\n      credentials: \"same-origin\"\n    }).then(response => response.json()).then(todo => {\n      dispatch({\n        type: \"update-item\",\n        item: todo\n      });\n      setState({\n        name: \"\"\n      });\n      formRef.current.reset();\n    });\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    ref: formRef,\n    className: \"InArriba\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"Input\",\n    type: \"text\",\n    name: \"name\",\n    placeholder: \"\\xBFQu\\xE9 piensas hacer hoy?\",\n    defaultValue: item.groupListId === groupListId ? item.name : \"\",\n    onChange: event => {\n      sethasWritten(true);\n      setIsDisabled(event.target.value.length > 3 ? false : true);\n      setState({ ...state,\n        name: event.target.value\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), item.id && React.createElement(\"button\", {\n    id: \"Actualizar\",\n    className: \"btn btn-primary\",\n    onClick: onEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Actualizar\"), !item.id && React.createElement(\"button\", {\n    id: \"Agregar\",\n    className: \"btn btn-primary\",\n    onClick: onAdd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"Crear\")));\n};\nexport default FormTodo;","map":{"version":3,"sources":["C:/Users/ARLEY/Desktop/Reto-Final-Crud/kata-crud-refactoring/front/src/Componentes/FormTodo.js"],"names":["React","useContext","useState","useRef","Fragment","HOST_API","Store","FormTodo","groupList","formRef","dispatch","state","todo","item","setState","isDisabled","setIsDisabled","hasWritten","sethasWritten","onAdd","event","preventDefault","request","name","id","completed","groupListId","fetch","method","mode","body","JSON","stringify","headers","credentials","then","response","json","type","current","reset","onEdit","isCompleted","target","value","length"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useRef, Fragment } from \"react\";\r\nimport { HOST_API } from \"../Componentes/reducer\";\r\nimport { Store } from \"../Componentes/Store\";\r\nimport \"./Styles.css\";\r\n\r\nexport const FormTodo = ({ groupList }) => {\r\n  const formRef = useRef(null);\r\n\r\n  const {\r\n    dispatch,\r\n    state: { todo },\r\n  } = useContext(Store);\r\n  const item = todo.item;\r\n  const [state, setState] = useState(item);\r\n  /**\r\n   *\r\n   * nuevo\r\n   */\r\n  const [isDisabled, setIsDisabled] = useState(true);\r\n  const [hasWritten, sethasWritten] = useState(false);\r\n\r\n  const onAdd = (event) => {\r\n    event.preventDefault();\r\n    /**\r\n     * nuevo\r\n     */\r\n    setIsDisabled(true);\r\n    sethasWritten(false);\r\n\r\n    const request = {\r\n      name: state.name,\r\n      id: null,\r\n      completed: false,\r\n      /**\r\n       * nuevo\r\n       */\r\n      groupListId: groupListId,\r\n    };\r\n\r\n    fetch(HOST_API + \"/todo\", {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      body: JSON.stringify(request),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      //duda\r\n      credentials: \"same-origin\",\r\n    })\r\n      .then((response) => response.json())\r\n      .then((todo) => {\r\n        dispatch({ type: \"add-item\", item: todo });\r\n        setState({ name: \"\" });\r\n        formRef.current.reset();\r\n      });\r\n  };\r\n\r\n  const onEdit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const request = {\r\n      name: state.name,\r\n      id: item.id,\r\n      isCompleted: item.isCompleted,\r\n      groupListId: groupListId,\r\n    };\r\n\r\n    fetch(HOST_API + \"/todo\", {\r\n      method: \"PUT\",\r\n      mode: \"cors\",\r\n      body: JSON.stringify(request),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      //duda\r\n      credentials: \"same-origin\",\r\n    })\r\n      .then((response) => response.json())\r\n      .then((todo) => {\r\n        dispatch({ type: \"update-item\", item: todo });\r\n        setState({ name: \"\" });\r\n        formRef.current.reset();\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <form ref={formRef} \r\n      className=\"InArriba\">\r\n        <input\r\n          className=\"Input\"\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"¿Qué piensas hacer hoy?\"\r\n          defaultValue={item.groupListId === groupListId ? item.name : \"\"}\r\n          onChange={(event) => {\r\n            sethasWritten(true)\r\n            setIsDisabled(event.target.value.length > 3 ? false : true)\r\n            setState({ ...state, name: event.target.value })\r\n          }}\r\n       />\r\n        {item.id && (\r\n          <button id=\"Actualizar\" className=\"btn btn-primary\" onClick={onEdit}>\r\n            Actualizar\r\n          </button>\r\n        )}\r\n        {!item.id && (\r\n          <button id=\"Agregar\" className=\"btn btn-primary\" onClick={onAdd}>\r\n            Crear\r\n          </button>\r\n        )}\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default FormTodo;\r\n"]},"metadata":{},"sourceType":"module"}