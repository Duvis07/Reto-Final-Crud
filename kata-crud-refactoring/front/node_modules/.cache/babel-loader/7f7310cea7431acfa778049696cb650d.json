{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ARLEY\\\\Desktop\\\\Reto-Final-Crud\\\\kata-crud-refactoring\\\\front\\\\src\\\\Componentes\\\\FormTodoList.js\";\nimport React, { useContext, useState, useRef, Fragment } from \"react\";\nimport { HOST_API } from \"../Componentes/reducer.js\";\nimport { Store } from \"../Componentes/Store.js\";\nimport \"./Styles.css\";\n\nconst FormTodoList = () => {\n  const formRef = useRef(null);\n  const {\n    dispatch,\n    state: {\n      lists\n    }\n  } = useContext(Store);\n  const item = lists.item;\n  const [state, setState] = useState(item);\n  const [isDisabled, setIsDisabled] = useState(true);\n  const [hasWritten, sethasWritten] = useState(false);\n\n  const onAdd = event => {\n    event.preventDefault();\n    setIsDisabled(true);\n    sethasWritten(false);\n    const request = {\n      name: state.name,\n      id: null\n    };\n    fetch(HOST_API + \"/todolist\", {\n      method: \"POST\",\n      body: JSON.stringify(request),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(list => {\n      dispatch({\n        type: \"add-list\",\n        item: list\n      });\n      setState({\n        name: \"\"\n      });\n      formRef.current.reset();\n    });\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    ref: formRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    id: \"Listas\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Listas\"), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    placeholder: \"Nombre de tu lista\",\n    defaultValue: item.name,\n    id: \"listForms\",\n    onChange: event => {\n      sethasWritten(true);\n      setIsDisabled(event.target.value.length > 3 ? false : true);\n      setState({ ...state,\n        name: event.target.value\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), !item.id && React.createElement(\"button\", {\n    disabled: isDisabled,\n    id: \"Agregarlist\",\n    onClick: onAdd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Crear\"), isDisabled && hasWritten && React.createElement(\"p\", {\n    className: \"MinimunLength\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Minimo 4 caracteres\")));\n};\n\nexport default FormTodoList;","map":{"version":3,"sources":["C:/Users/ARLEY/Desktop/Reto-Final-Crud/kata-crud-refactoring/front/src/Componentes/FormTodoList.js"],"names":["React","useContext","useState","useRef","Fragment","HOST_API","Store","FormTodoList","formRef","dispatch","state","lists","item","setState","isDisabled","setIsDisabled","hasWritten","sethasWritten","onAdd","event","preventDefault","request","name","id","fetch","method","body","JSON","stringify","headers","then","response","json","list","type","current","reset","target","value","length"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useRef, Fragment } from \"react\";\r\nimport { HOST_API } from \"../Componentes/reducer.js\";\r\nimport { Store } from \"../Componentes/Store.js\";\r\nimport \"./Styles.css\";\r\n\r\nconst FormTodoList = () => {\r\n  const formRef = useRef(null);\r\n  const {\r\n    dispatch,\r\n    state: { lists },\r\n  } = useContext(Store);\r\n  const item = lists.item;\r\n  const [state, setState] = useState(item);\r\n  const [isDisabled, setIsDisabled] = useState(true);\r\n  const [hasWritten, sethasWritten] = useState(false);\r\n\r\n  const onAdd = (event) => {\r\n    event.preventDefault();\r\n    setIsDisabled(true);\r\n    sethasWritten(false);\r\n    const request = {\r\n      name: state.name,\r\n      id: null,\r\n    };\r\n\r\n    fetch(HOST_API + \"/todolist\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(request),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((list) => {\r\n        dispatch({ type: \"add-list\", item: list });\r\n        setState({ name: \"\" });\r\n        formRef.current.reset();\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <form ref={formRef}>\r\n        <h3 id=\"Listas\">Listas</h3>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Nombre de tu lista\"\r\n          defaultValue={item.name}\r\n          id=\"listForms\"\r\n          onChange={(event) => {\r\n            sethasWritten(true);\r\n            setIsDisabled(event.target.value.length > 3 ? false : true);\r\n            setState({ ...state, name: event.target.value });\r\n          }}\r\n        ></input>\r\n        {!item.id && (\r\n          <button disabled={isDisabled} id=\"Agregarlist\" onClick={onAdd}>\r\n            Crear\r\n          </button>\r\n        )}\r\n\r\n        {isDisabled && hasWritten && (\r\n          <p className=\"MinimunLength\">Minimo 4 caracteres</p>\r\n        )}\r\n      </form>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default FormTodoList;\r\n"]},"metadata":{},"sourceType":"module"}