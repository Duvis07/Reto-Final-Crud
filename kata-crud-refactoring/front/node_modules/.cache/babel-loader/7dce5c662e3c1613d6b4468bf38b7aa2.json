{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ARLEY\\\\Desktop\\\\Reto-Final-Crud\\\\kata-crud-refactoring\\\\front\\\\src\\\\Componentes\\\\FormTodo.js\";\nimport React, { useContext, useState, useRef, Fragment } from \"react\";\nimport { HOST_API } from '../Componentes/reducer';\nimport { Store } from '../Componentes/Store';\nimport \"./Styles.css\";\nexport const FormTodo = ({\n  groupList\n}) => {\n  const formRef = useRef(null);\n  const {\n    dispatch,\n    state: {\n      todo\n    }\n  } = useContext(Store);\n  const item = todo.item;\n  const [state, setState] = useState(item);\n\n  const onAdd = event => {\n    event.preventDefault();\n    const request = {\n      name: state.name,\n      id: null,\n      completed: false\n    };\n    fetch(HOST_API + \"/todo\", {\n      method: \"POST\",\n      mode: \"cors\",\n      body: JSON.stringify(request),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"same-origin\"\n    }).then(response => response.json()).then(todo => {\n      dispatch({\n        type: \"add-item\",\n        item: todo\n      });\n      setState({\n        name: \"\"\n      });\n      formRef.current.reset();\n    });\n  };\n\n  const onEdit = event => {\n    event.preventDefault();\n    const request = {\n      name: state.name,\n      id: item.id,\n      isCompleted: item.isCompleted\n    };\n    fetch(HOST_API + \"/todo\", {\n      method: \"PUT\",\n      mode: \"cors\",\n      body: JSON.stringify(request),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"same-origin\"\n    }).then(response => response.json()).then(todo => {\n      dispatch({\n        type: \"update-item\",\n        item: todo\n      });\n      setState({\n        name: \"\"\n      });\n      formRef.current.reset();\n    });\n  };\n\n  return React.createElement(\"form\", {\n    ref: formRef,\n    className: \"InArriba\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"Input\",\n    type: \"text\",\n    name: \"name\",\n    placeholder: \"\\xBFQu\\xE9 piensas hacer hoy?\",\n    defaultValue: item.name,\n    onChange: event => {\n      setState({ ...state,\n        name: event.target.value\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), item.id && React.createElement(\"button\", {\n    id: \"Actualizar\",\n    className: \"btn btn-primary\",\n    onClick: onEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Actualizar\"), !item.id && React.createElement(\"button\", {\n    id: \"Agregar\",\n    className: \"btn btn-primary\",\n    onClick: onAdd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Crear\"));\n};\nexport default FormTodo;","map":{"version":3,"sources":["C:/Users/ARLEY/Desktop/Reto-Final-Crud/kata-crud-refactoring/front/src/Componentes/FormTodo.js"],"names":["React","useContext","useState","useRef","Fragment","HOST_API","Store","FormTodo","groupList","formRef","dispatch","state","todo","item","setState","onAdd","event","preventDefault","request","name","id","completed","fetch","method","mode","body","JSON","stringify","headers","credentials","then","response","json","type","current","reset","onEdit","isCompleted","target","value"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useRef, Fragment } from \"react\";\r\nimport {  HOST_API } from '../Componentes/reducer';\r\nimport { Store } from '../Componentes/Store';\r\nimport \"./Styles.css\";\r\n\r\nexport const FormTodo = ({ groupList }) => {\r\n  const formRef = useRef(null);\r\n\r\n  const {  dispatch, state: { todo },} = useContext(Store);\r\n  const item = todo.item;\r\n  const [state, setState] = useState(item);\r\n\r\n  const onAdd = (event) => {\r\n    event.preventDefault();\r\n\r\n    const request = {\r\n      name: state.name,\r\n      id: null,\r\n      completed: false,\r\n    };\r\n\r\n    fetch(HOST_API + \"/todo\", {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      body: JSON.stringify(request),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      credentials: \"same-origin\",\r\n    })\r\n      .then((response) => response.json())\r\n      .then((todo) => {\r\n        dispatch({ type: \"add-item\", item: todo });\r\n        setState({ name: \"\" });\r\n        formRef.current.reset();\r\n      });\r\n  };\r\n\r\n  const onEdit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const request = {\r\n      name: state.name,\r\n      id: item.id,\r\n      isCompleted: item.isCompleted,\r\n    };\r\n\r\n    fetch(HOST_API + \"/todo\", {\r\n      method: \"PUT\",\r\n      mode: \"cors\",\r\n      body: JSON.stringify(request),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      credentials: \"same-origin\",\r\n    })\r\n      .then((response) => response.json())\r\n      .then((todo) => {\r\n        dispatch({ type: \"update-item\", item: todo });\r\n        setState({ name: \"\" });\r\n        formRef.current.reset();\r\n      });\r\n  };\r\n\r\n  return (\r\n    <form ref={formRef} className=\"InArriba\">\r\n      <input\r\n        className=\"Input\"\r\n        type=\"text\"\r\n        name=\"name\"\r\n        placeholder=\"¿Qué piensas hacer hoy?\"\r\n        defaultValue={item.name}\r\n        onChange={(event) => {\r\n          setState({ ...state, name: event.target.value });\r\n        }}\r\n      ></input>\r\n      {item.id && (\r\n        <button id=\"Actualizar\" className=\"btn btn-primary\" onClick={onEdit}>\r\n          Actualizar\r\n        </button>\r\n      )}\r\n      {!item.id && (\r\n        <button id=\"Agregar\" className=\"btn btn-primary\" onClick={onAdd}>\r\n          Crear\r\n        </button>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default FormTodo;\r\n\r\n"]},"metadata":{},"sourceType":"module"}