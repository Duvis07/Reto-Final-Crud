{"ast":null,"code":"import React, { useContext, useEffect } from \"react\";\nimport FormTodo from \"../Componentes/FormTodo.js\";\nimport { Store } from \"../Componentes/Store.js\";\nimport { HOST_API } from \"../Componentes/reducer\";\nimport \"./Styles.css\";\nexport const List = () => {\n  const {\n    dispatch,\n    state: {\n      todo,\n      lists\n    }\n  } = useContext(Store);\n  const currentTodos = todo.list;\n  const currentList = lists.list;\n  useEffect(() => {\n    fetch(HOST_API + \"/todos\").then(response => response.json()).then(list => {\n      dispatch({\n        type: \"update-list\",\n        list\n      });\n    });\n  }, [dispatch]);\n\n  const onDelete = id => {\n    fetch(HOST_API + \"/\" + id + \"/todo\", {\n      method: \"DELETE\"\n    }).then(list => {\n      dispatch({\n        type: \"delete-item\",\n        id\n      });\n    });\n  };\n\n  const onEdit = todo => {\n    dispatch({\n      type: \"edit-item\",\n      item: todo\n    });\n  };\n\n  const onChange = (event, todo, groupListId) => {\n    const request = {\n      name: todo.name,\n      id: todo.id,\n      completed: event.target.checked,\n      groupListId: groupListId\n    };\n    fetch(HOST_API + \"/todo\", {\n      method: \"PUT\",\n      body: JSON.stringify(request),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(todo => {\n      dispatch({\n        type: \"update-item\",\n        item: todo\n      });\n    });\n  }; //nuevo\n\n\n  useEffect(() => {\n    fetch(HOST_API + \"/todoLists\").then(response => response.json()).then(list => {\n      dispatch({\n        type: \"update-listOfList\",\n        list\n      });\n    });\n  }, [dispatch]);\n\n  const onDeleteList = id => {\n    const deleteAllListItem = todo.list.map(item => {\n      if (item.groupListId === id) {\n        onDelete(item.id);\n      }\n    });\n    fetch(HOST_API + \"/\" + id + \"/todoList\", {\n      method: \"DELETE\"\n    }).then(list => {\n      dispatch({\n        type: \"delete-list\",\n        id\n      });\n    });\n  };\n\n  const decorationDone = {\n    textDecoration: \"line-through\"\n  };\n};\nexport default List;","map":{"version":3,"sources":["C:/Users/ARLEY/Desktop/Reto-Final-Crud/kata-crud-refactoring/front/src/Componentes/List.js"],"names":["React","useContext","useEffect","FormTodo","Store","HOST_API","List","dispatch","state","todo","lists","currentTodos","list","currentList","fetch","then","response","json","type","onDelete","id","method","onEdit","item","onChange","event","groupListId","request","name","completed","target","checked","body","JSON","stringify","headers","onDeleteList","deleteAllListItem","map","decorationDone","textDecoration"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from \"react\";\r\nimport FormTodo from \"../Componentes/FormTodo.js\";\r\nimport { Store } from \"../Componentes/Store.js\";\r\nimport { HOST_API } from \"../Componentes/reducer\";\r\nimport \"./Styles.css\";\r\n\r\nexport const List = () => {\r\n  const {\r\n    dispatch,\r\n    state: { todo, lists },\r\n  } = useContext(Store);\r\n  const currentTodos = todo.list;\r\n  const currentList = lists.list;\r\n\r\n  useEffect(() => {\r\n    fetch(HOST_API + \"/todos\")\r\n      .then((response) => response.json())\r\n      .then((list) => {\r\n        dispatch({ type: \"update-list\", list });\r\n      });\r\n  }, [dispatch]);\r\n\r\n  const onDelete = (id) => {\r\n    fetch(HOST_API + \"/\" + id + \"/todo\", {\r\n      method: \"DELETE\",\r\n    }).then((list) => {\r\n      dispatch({ type: \"delete-item\", id });\r\n    });\r\n  };\r\n\r\n  const onEdit = (todo) => {\r\n    dispatch({ type: \"edit-item\", item: todo });\r\n  };\r\n\r\n  const onChange = (event, todo, groupListId) => {\r\n    const request = {\r\n      name: todo.name,\r\n      id: todo.id,\r\n      completed: event.target.checked,\r\n      groupListId: groupListId,\r\n    };\r\n    fetch(HOST_API + \"/todo\", {\r\n      method: \"PUT\",\r\n      body: JSON.stringify(request),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((todo) => {\r\n        dispatch({ type: \"update-item\", item: todo });\r\n      });\r\n  };\r\n\r\n  //nuevo\r\n\r\n  useEffect(() => {\r\n    fetch(HOST_API + \"/todoLists\")\r\n      .then(response => response.json())\r\n      .then((list) => {\r\n        dispatch({ type: \"update-listOfList\", list })\r\n      })\r\n  }, [dispatch]);\r\n\r\n  const onDeleteList = (id) => {\r\n\r\n    const deleteAllListItem = todo.list.map((item) => {\r\n      if(item.groupListId === id){\r\n        onDelete(item.id);\r\n      }\r\n    });\r\n\r\n\r\n    fetch(HOST_API + \"/\" + id + \"/todoList\", {\r\n      method: \"DELETE\"\r\n    }).then((list) => {\r\n      dispatch({ type: \"delete-list\", id })\r\n    })\r\n  };\r\n\r\n\r\n  const decorationDone = {\r\n    textDecoration: \"line-through\",\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n}\r\nexport default List;\r\n"]},"metadata":{},"sourceType":"module"}