{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ARLEY\\\\Desktop\\\\Reto-Final-Crud\\\\kata-crud-refactoring\\\\front\\\\src\\\\Componentes\\\\FormTodo.js\";\nimport React, { useContext, useState, useRef, Fragment } from \"react\";\nimport { HOST_API } from \"../Componentes/reducer\";\nimport { Store } from \"../Componentes/Store\";\nimport FormTodoList from \"./FormTodoList\";\nimport \"./Styles.css\";\n\nconst FormTodo = ({\n  groupListId\n}) => {\n  const formRef = useRef(null);\n  const {\n    dispatch,\n    state: {\n      todo\n    }\n  } = useContext(Store);\n  const item = todo.item;\n  const [state, setState] = useState(item);\n  const [isDisabled, setIsDisabled] = useState(true);\n  const [hasWritten, sethasWritten] = useState(false);\n\n  const onAdd = event => {\n    const request = {\n      name: state.name,\n      id: null,\n      isCompleted: false,\n      groupListId: groupListId\n    };\n    fetch(HOST_API + \"/todo\", {\n      method: \"POST\",\n      body: JSON.stringify(request),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(todo => {\n      dispatch({\n        type: \"add-item\",\n        item: todo\n      });\n      setState({\n        name: \"\"\n      });\n      formRef.current.reset();\n    });\n  };\n\n  const onEdit = event => {\n    const request = {\n      name: state.name,\n      id: item.id,\n      isCompleted: item.isCompleted,\n      groupListId: groupListId\n    };\n    fetch(HOST_API + \"/todo\", {\n      method: \"PUT\",\n      body: JSON.stringify(request),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(todo => {\n      dispatch({\n        type: \"update-item\",\n        item: todo\n      });\n      setState({\n        name: \"\"\n      });\n      formRef.current.reset();\n    });\n  };\n\n  return React.createElement(\"form\", {\n    ref: formRef,\n    className: \"InArriba\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"Input\",\n    placeholder: \"Agrega una Tarea\",\n    type: \"text\",\n    name: \"name\",\n    defaultValue: item.groupListId === groupListId ? item.name : \"\",\n    onChange: event => {\n      sethasWritten = true;\n      setState({ ...state,\n        name: event.target.value\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), item.id && React.createElement(\"button\", {\n    id: \"Actualizar\",\n    class: \"btn btn-primary\",\n    onClick: onEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Actualizar\"), !item.id && React.createElement(\"button\", {\n    id: \"Agregar\",\n    class: \"btn btn-primary\",\n    onClick: onAdd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Agregar\"));\n};\n\nexport default FormTodo;","map":{"version":3,"sources":["C:/Users/ARLEY/Desktop/Reto-Final-Crud/kata-crud-refactoring/front/src/Componentes/FormTodo.js"],"names":["React","useContext","useState","useRef","Fragment","HOST_API","Store","FormTodoList","FormTodo","groupListId","formRef","dispatch","state","todo","item","setState","isDisabled","setIsDisabled","hasWritten","sethasWritten","onAdd","event","request","name","id","isCompleted","fetch","method","body","JSON","stringify","headers","then","response","json","type","current","reset","onEdit","target","value"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useRef, Fragment } from \"react\";\r\nimport { HOST_API } from \"../Componentes/reducer\";\r\nimport { Store } from \"../Componentes/Store\";\r\nimport FormTodoList from \"./FormTodoList\";\r\nimport \"./Styles.css\";\r\n\r\nconst FormTodo = ({ groupListId }) => {\r\n  const formRef = useRef(null);\r\n  const {\r\n    dispatch,\r\n    state: { todo },\r\n  } = useContext(Store);\r\n  const item = todo.item;\r\n  const [state, setState] = useState(item);\r\n  const [isDisabled, setIsDisabled] = useState(true);\r\n  const [hasWritten, sethasWritten] = useState(false);\r\n\r\n  const onAdd = (event) => {\r\n    const request = {\r\n      name: state.name,\r\n      id: null,\r\n      isCompleted: false,\r\n      groupListId: groupListId,\r\n    };\r\n\r\n    fetch(HOST_API + \"/todo\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(request),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((todo) => {\r\n        dispatch({ type: \"add-item\", item: todo });\r\n        setState({ name: \"\" });\r\n        formRef.current.reset();\r\n      });\r\n  };\r\n\r\n  const onEdit = (event) => {\r\n    const request = {\r\n      name: state.name,\r\n      id: item.id,\r\n      isCompleted: item.isCompleted,\r\n      groupListId: groupListId,\r\n    };\r\n\r\n    fetch(HOST_API + \"/todo\", {\r\n      method: \"PUT\",\r\n      body: JSON.stringify(request),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((todo) => {\r\n        dispatch({ type: \"update-item\", item: todo });\r\n        setState({ name: \"\" });\r\n        formRef.current.reset();\r\n      });\r\n  };\r\n\r\n  return (\r\n    <form ref={formRef} className=\"InArriba\">\r\n      <input\r\n        className=\"Input\"\r\n        placeholder=\"Agrega una Tarea\"\r\n        type=\"text\"\r\n        name=\"name\"\r\n        defaultValue={item.groupListId === groupListId ? item.name:\"\"}\r\n        onChange={(event) => {\r\n          sethasWritten=(true)\r\n          setState({ ...state, name: event.target.value });\r\n        }}\r\n      ></input>\r\n      {item.id && (\r\n        <button id=\"Actualizar\" class=\"btn btn-primary\" onClick={onEdit}>\r\n          Actualizar\r\n        </button>\r\n      )}\r\n      {!item.id && (\r\n        <button id=\"Agregar\" class=\"btn btn-primary\" onClick={onAdd}>\r\n          Agregar\r\n        </button>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default FormTodo;\r\n"]},"metadata":{},"sourceType":"module"}