{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ARLEY\\\\Desktop\\\\Reto-Final-Crud\\\\kata-crud-refactoring\\\\front\\\\src\\\\Componentes\\\\List.js\";\nimport React, { useContext, useEffect } from \"react\";\nimport FormTodo from '../Componentes/FormTodo.js';\nimport { Store } from '../Componentes/Store.js';\nimport { HOST_API } from '../Componentes/reducer';\nimport \"./Styles.css\";\nexport const List = () => {\n  useEffect(() => {\n    fetch(HOST_API + \"/todos\").then(response => response.json()).then(list => {\n      dispatch({\n        type: \"update-list\",\n        list\n      });\n    });\n  }, [dispatch]);\n\n  const onDelete = id => {\n    fetch(HOST_API + \"/\" + id + \"/todo\", {\n      method: \"DELETE\"\n    }).then(list => {\n      dispatch({\n        type: \"delete-item\",\n        id\n      });\n    });\n  };\n\n  const onEdit = todo => {\n    dispatch({\n      type: \"edit-item\",\n      item: todo\n    });\n  };\n\n  const onChange = (event, todo) => {\n    const request = {\n      name: todo.name,\n      id: todo.id,\n      completed: event.target.checked\n    };\n    fetch(HOST_API + \"/todo\", {\n      method: \"PUT\",\n      body: JSON.stringify(request),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(todo => {\n      dispatch({\n        type: \"update-item\",\n        item: todo\n      });\n    });\n  };\n\n  const decorationDone = {\n    textDecoration: \"line-through\"\n  };\n  return React.createElement(\"div\", {\n    className: \"tabla\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    className: \"table table-striped table-dark table-hover\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    scope: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"ID\"), React.createElement(\"th\", {\n    scope: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Tarea\"), React.createElement(\"th\", {\n    scope: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"\\xBFCompletado?\"), React.createElement(\"th\", {\n    scope: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Eliminar\"), React.createElement(\"th\", {\n    scope: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Editar\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, currentList.map(todo => {\n    return React.createElement(\"tr\", {\n      key: todo.id,\n      style: todo.completed ? decorationDone : {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, todo.id), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, todo.name), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      defaultChecked: todo.completed,\n      onChange: event => onChange(event, todo),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"Eliminar\",\n      type: \"button\",\n      className: \"btn btn-danger\",\n      onClick: () => onDelete(todo.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Eliminar\")), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"Editar\",\n      className: \"btn btn-primary\",\n      onClick: () => onEdit(todo),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Editar\")));\n  }))));\n};\nexport default List;","map":{"version":3,"sources":["C:/Users/ARLEY/Desktop/Reto-Final-Crud/kata-crud-refactoring/front/src/Componentes/List.js"],"names":["React","useContext","useEffect","FormTodo","Store","HOST_API","List","fetch","then","response","json","list","dispatch","type","onDelete","id","method","onEdit","todo","item","onChange","event","request","name","completed","target","checked","body","JSON","stringify","headers","decorationDone","textDecoration","currentList","map"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from \"react\";\r\nimport FormTodo from '../Componentes/FormTodo.js';\r\nimport { Store } from '../Componentes/Store.js';\r\nimport {  HOST_API } from '../Componentes/reducer';\r\nimport \"./Styles.css\";\r\n\r\nexport const List = () => {\r\n\r\n\r\n  useEffect(() => {\r\n    fetch(HOST_API + \"/todos\")\r\n      .then((response) => response.json())\r\n      .then((list) => {\r\n        dispatch({ type: \"update-list\", list });\r\n      });\r\n  }, [dispatch]);\r\n\r\n  const onDelete = (id) => {\r\n    fetch(HOST_API + \"/\" + id + \"/todo\", {\r\n      method: \"DELETE\",\r\n    }).then((list) => {\r\n      dispatch({ type: \"delete-item\", id });\r\n    });\r\n  };\r\n\r\n  const onEdit = (todo) => {\r\n    dispatch({ type: \"edit-item\", item: todo });\r\n  };\r\n\r\n  const onChange = (event, todo) => {\r\n    const request = {\r\n      name: todo.name,\r\n      id: todo.id,\r\n      completed: event.target.checked,\r\n    };\r\n    fetch(HOST_API + \"/todo\", {\r\n      method: \"PUT\",\r\n      body: JSON.stringify(request),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((todo) => {\r\n        dispatch({ type: \"update-item\", item: todo });\r\n      });\r\n  };\r\n\r\n  const decorationDone = {\r\n    textDecoration: \"line-through\",\r\n  };\r\n  return (\r\n    <div className=\"tabla\">\r\n      <table className=\"table table-striped table-dark table-hover\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">ID</th>\r\n            <th scope=\"col\">Tarea</th>\r\n            <th scope=\"col\">¿Completado?</th>\r\n            <th scope=\"col\">Eliminar</th>\r\n            <th scope=\"col\">Editar</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {currentList.map((todo) => {\r\n            return (\r\n              <tr key={todo.id} style={todo.completed ? decorationDone : {}}>\r\n                <td>{todo.id}</td>\r\n                <td>{todo.name}</td>\r\n                <td>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    defaultChecked={todo.completed}\r\n                    onChange={(event) => onChange(event, todo)}\r\n                  ></input>\r\n                </td>\r\n                <td>\r\n                  <button\r\n                    id=\"Eliminar\"\r\n                    type=\"button\"\r\n                    className=\"btn btn-danger\"\r\n                    onClick={() => onDelete(todo.id)}\r\n                  >\r\n                    Eliminar\r\n                  </button>\r\n                </td>\r\n                <td>\r\n                  <button\r\n                    id=\"Editar\"\r\n                    className=\"btn btn-primary\"\r\n                    onClick={() => onEdit(todo)}\r\n                  >\r\n                    Editar\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;"]},"metadata":{},"sourceType":"module"}