{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ARLEY\\\\Desktop\\\\Reto-Final\\\\kata-crud-refactoring\\\\front\\\\src\\\\Componentes\\\\Form.js\";\nimport React, { useContext, useRef, useState } from \"react\";\nimport { Store, HOST_API } from \"../App\";\nexport const Form = () => {\n  const formRef = useRef(null);\n  const {\n    dispatch,\n    state: {\n      todo\n    }\n  } = useContext(Store);\n  const item = todo.item;\n  const [state, setState] = useState(item);\n\n  const onAdd = event => {\n    event.preventDefault();\n    const request = {\n      name: state.name,\n      id: null,\n      completed: false\n    };\n    fetch(HOST_API + \"/todo\", {\n      method: \"POST\",\n      body: JSON.stringify(request),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(todo => {\n      dispatch({\n        type: \"add-item\",\n        item: todo\n      });\n      setState({\n        name: \"\"\n      });\n      formRef.current.reset();\n    });\n  };\n\n  const onEdit = event => {\n    event.preventDefault();\n    const request = {\n      name: state.name,\n      id: item.id,\n      isCompleted: item.isCompleted\n    };\n    fetch(HOST_API + \"/todo\", {\n      method: \"PUT\",\n      body: JSON.stringify(request),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(todo => {\n      dispatch({\n        type: \"update-item\",\n        item: todo\n      });\n      setState({\n        name: \"\"\n      });\n      formRef.current.reset();\n    });\n  };\n\n  return React.createElement(\"form\", {\n    ref: formRef,\n    className: \"InArriba\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"Input\",\n    type: \"text\",\n    name: \"name\",\n    placeholder: \"\\xBFQu\\xE9 piensas hacer hoy?\",\n    defaultValue: item.name,\n    onChange: event => {\n      setState({ ...state,\n        name: event.target.value\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), item.id && React.createElement(\"button\", {\n    id: \"Actualizar\",\n    class: \"btn btn-primary\",\n    onClick: onEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Actualizar\"), !item.id && React.createElement(\"button\", {\n    onClick: onAdd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Crear\"));\n};","map":{"version":3,"sources":["C:/Users/ARLEY/Desktop/Reto-Final/kata-crud-refactoring/front/src/Componentes/Form.js"],"names":["React","useContext","useRef","useState","Store","HOST_API","Form","formRef","dispatch","state","todo","item","setState","onAdd","event","preventDefault","request","name","id","completed","fetch","method","body","JSON","stringify","headers","then","response","json","type","current","reset","onEdit","isCompleted","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,MAA5B,EAAoCC,QAApC,QAAoD,OAApD;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,QAAhC;AAEA,OAAO,MAAMC,IAAI,GAAG,MAAM;AACxB,QAAMC,OAAO,GAAGL,MAAM,CAAC,IAAD,CAAtB;AACA,QAAM;AACJM,IAAAA,QADI;AAEJC,IAAAA,KAAK,EAAE;AAAEC,MAAAA;AAAF;AAFH,MAGFT,UAAU,CAACG,KAAD,CAHd;AAIA,QAAMO,IAAI,GAAGD,IAAI,CAACC,IAAlB;AACA,QAAM,CAACF,KAAD,EAAQG,QAAR,IAAoBT,QAAQ,CAACQ,IAAD,CAAlC;;AAEA,QAAME,KAAK,GAAIC,KAAD,IAAW;AACvBA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMC,OAAO,GAAG;AACdC,MAAAA,IAAI,EAAER,KAAK,CAACQ,IADE;AAEdC,MAAAA,EAAE,EAAE,IAFU;AAGdC,MAAAA,SAAS,EAAE;AAHG,KAAhB;AAMAC,IAAAA,KAAK,CAACf,QAAQ,GAAG,OAAZ,EAAqB;AACxBgB,MAAAA,MAAM,EAAE,MADgB;AAExBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,OAAf,CAFkB;AAGxBS,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAHe,KAArB,CAAL,CAOGC,IAPH,CAOSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAPtB,EAQGF,IARH,CAQShB,IAAD,IAAU;AACdF,MAAAA,QAAQ,CAAC;AAAEqB,QAAAA,IAAI,EAAE,UAAR;AAAoBlB,QAAAA,IAAI,EAAED;AAA1B,OAAD,CAAR;AACAE,MAAAA,QAAQ,CAAC;AAAEK,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACAV,MAAAA,OAAO,CAACuB,OAAR,CAAgBC,KAAhB;AACD,KAZH;AAaD,GAtBD;;AAwBA,QAAMC,MAAM,GAAIlB,KAAD,IAAW;AACxBA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMC,OAAO,GAAG;AACdC,MAAAA,IAAI,EAAER,KAAK,CAACQ,IADE;AAEdC,MAAAA,EAAE,EAAEP,IAAI,CAACO,EAFK;AAGde,MAAAA,WAAW,EAAEtB,IAAI,CAACsB;AAHJ,KAAhB;AAMAb,IAAAA,KAAK,CAACf,QAAQ,GAAG,OAAZ,EAAqB;AACxBgB,MAAAA,MAAM,EAAE,KADgB;AAExBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,OAAf,CAFkB;AAGxBS,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAHe,KAArB,CAAL,CAOGC,IAPH,CAOSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAPtB,EAQGF,IARH,CAQShB,IAAD,IAAU;AACdF,MAAAA,QAAQ,CAAC;AAAEqB,QAAAA,IAAI,EAAE,aAAR;AAAuBlB,QAAAA,IAAI,EAAED;AAA7B,OAAD,CAAR;AACAE,MAAAA,QAAQ,CAAC;AAAEK,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACAV,MAAAA,OAAO,CAACuB,OAAR,CAAgBC,KAAhB;AACD,KAZH;AAaD,GAtBD;;AAwBA,SACE;AAAM,IAAA,GAAG,EAAExB,OAAX;AAAoB,IAAA,SAAS,EAAC,UAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,OADZ;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,WAAW,EAAC,+BAJd;AAKE,IAAA,YAAY,EAAEI,IAAI,CAACM,IALrB;AAME,IAAA,QAAQ,EAAGH,KAAD,IAAW;AACnBF,MAAAA,QAAQ,CAAC,EAAE,GAAGH,KAAL;AAAYQ,QAAAA,IAAI,EAAEH,KAAK,CAACoB,MAAN,CAAaC;AAA/B,OAAD,CAAR;AACD,KARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAWGxB,IAAI,CAACO,EAAL,IACC;AAAQ,IAAA,EAAE,EAAC,YAAX;AAAwB,IAAA,KAAK,EAAC,iBAA9B;AAAgD,IAAA,OAAO,EAAEc,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAZJ,EAgBG,CAACrB,IAAI,CAACO,EAAN,IAAY;AACZ,IAAA,OAAO,EAAEL,KADG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAhBf,CADF;AAqBD,CA9EM","sourcesContent":["import React, { useContext, useRef, useState } from \"react\";\r\nimport { Store, HOST_API } from \"../App\";\r\n\r\nexport const Form = () => {\r\n  const formRef = useRef(null);\r\n  const {\r\n    dispatch,\r\n    state: { todo },\r\n  } = useContext(Store);\r\n  const item = todo.item;\r\n  const [state, setState] = useState(item);\r\n\r\n  const onAdd = (event) => {\r\n    event.preventDefault();\r\n\r\n    const request = {\r\n      name: state.name,\r\n      id: null,\r\n      completed: false,\r\n    };\r\n\r\n    fetch(HOST_API + \"/todo\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(request),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((todo) => {\r\n        dispatch({ type: \"add-item\", item: todo });\r\n        setState({ name: \"\" });\r\n        formRef.current.reset();\r\n      });\r\n  };\r\n\r\n  const onEdit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const request = {\r\n      name: state.name,\r\n      id: item.id,\r\n      isCompleted: item.isCompleted,\r\n    };\r\n\r\n    fetch(HOST_API + \"/todo\", {\r\n      method: \"PUT\",\r\n      body: JSON.stringify(request),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((todo) => {\r\n        dispatch({ type: \"update-item\", item: todo });\r\n        setState({ name: \"\" });\r\n        formRef.current.reset();\r\n      });\r\n  };\r\n\r\n  return (\r\n    <form ref={formRef} className=\"InArriba\">\r\n      <input\r\n        className=\"Input\"\r\n        type=\"text\"\r\n        name=\"name\"\r\n        placeholder=\"¿Qué piensas hacer hoy?\"\r\n        defaultValue={item.name}\r\n        onChange={(event) => {\r\n          setState({ ...state, name: event.target.value });\r\n        }}\r\n      ></input>\r\n      {item.id && (\r\n        <button id=\"Actualizar\" class=\"btn btn-primary\" onClick={onEdit}>\r\n          Actualizar\r\n        </button>\r\n      )}\r\n      {!item.id && <button \r\n       onClick={onAdd}>Crear</button>}\r\n    </form>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}