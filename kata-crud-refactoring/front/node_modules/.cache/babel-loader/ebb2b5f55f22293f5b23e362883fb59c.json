{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ARLEY\\\\Desktop\\\\Reto-Final-Crud\\\\kata-crud-refactoring\\\\front\\\\src\\\\Componentes\\\\FormTodo.js\";\nimport React, { useContext, useState, useRef, Fragment } from \"react\";\nimport { HOST_API } from \"../Componentes/reducer\";\nimport { Store } from \"../Componentes/Store\";\nimport FormTodoList from \"./FormTodoList\";\nimport \"./Styles.css\";\n\nconst FormTodo = ({\n  groupListId\n}) => {\n  const onAdd = event => {\n    const request = {\n      name: state.name,\n      id: null,\n      isCompleted: false\n    };\n    fetch(HOST_API + \"/todo\", {\n      method: \"POST\",\n      body: JSON.stringify(request),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(todo => {\n      dispatch({\n        type: \"add-item\",\n        item: todo\n      });\n      setState({\n        name: \"\"\n      });\n      formRef.current.reset();\n    });\n  };\n\n  const onEdit = event => {\n    const request = {\n      name: state.name,\n      id: item.id,\n      isCompleted: item.isCompleted\n    };\n    fetch(HOST_API + \"/todo\", {\n      method: \"PUT\",\n      body: JSON.stringify(request),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(todo => {\n      dispatch({\n        type: \"update-item\",\n        item: todo\n      });\n      setState({\n        name: \"\"\n      });\n      formRef.current.reset();\n    });\n  };\n\n  return React.createElement(\"form\", {\n    ref: formRef,\n    className: \"InArriba\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"Input\",\n    placeholder: \"Agrega una Tarea\",\n    type: \"text\",\n    name: \"name\",\n    defaultValue: item.name,\n    onChange: event => {\n      setState({ ...state,\n        name: event.target.value\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), item.id && React.createElement(\"button\", {\n    id: \"Actualizar\",\n    class: \"btn btn-primary\",\n    onClick: onEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Actualizar\"), !item.id && React.createElement(\"button\", {\n    id: \"Agregar\",\n    class: \"btn btn-primary\",\n    onClick: onAdd,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Agregar\"));\n};\n\nexport default FormTodo;","map":{"version":3,"sources":["C:/Users/ARLEY/Desktop/Reto-Final-Crud/kata-crud-refactoring/front/src/Componentes/FormTodo.js"],"names":["React","useContext","useState","useRef","Fragment","HOST_API","Store","FormTodoList","FormTodo","groupListId","onAdd","event","request","name","state","id","isCompleted","fetch","method","body","JSON","stringify","headers","then","response","json","todo","dispatch","type","item","setState","formRef","current","reset","onEdit","target","value"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useRef, Fragment } from \"react\";\r\nimport { HOST_API } from \"../Componentes/reducer\";\r\nimport { Store } from \"../Componentes/Store\";\r\nimport FormTodoList from \"./FormTodoList\";\r\nimport \"./Styles.css\";\r\n\r\n\r\n\r\n\r\n const FormTodo = ({groupListId}) => {\r\n  \r\n\r\n  const onAdd = (event) => {\r\n    const request = {\r\n      name: state.name,\r\n      id: null,\r\n      isCompleted: false,\r\n    };\r\n\r\n    fetch(HOST_API + \"/todo\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify(request),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((todo) => {\r\n        dispatch({ type: \"add-item\", item: todo });\r\n        setState({ name: \"\" });\r\n        formRef.current.reset();\r\n      });\r\n  };\r\n\r\n  const onEdit = (event) => {\r\n    const request = {\r\n      name: state.name,\r\n      id: item.id,\r\n      isCompleted: item.isCompleted,\r\n    };\r\n\r\n    fetch(HOST_API + \"/todo\", {\r\n      method: \"PUT\",\r\n      body: JSON.stringify(request),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    })\r\n      .then((response) => response.json())\r\n      .then((todo) => {\r\n        dispatch({ type: \"update-item\", item: todo });\r\n        setState({ name: \"\" });\r\n        formRef.current.reset();\r\n      });\r\n  };\r\n\r\n  return (\r\n    <form ref={formRef} className=\"InArriba\">\r\n      <input\r\n        className=\"Input\"\r\n        placeholder=\"Agrega una Tarea\"\r\n        type=\"text\"\r\n        name=\"name\"\r\n        defaultValue={item.name}\r\n        onChange={(event) => {\r\n          setState({ ...state, name: event.target.value });\r\n        }}\r\n      ></input>\r\n      {item.id && (\r\n        <button id=\"Actualizar\" class=\"btn btn-primary\" onClick={onEdit}>\r\n          Actualizar\r\n        </button>\r\n      )}\r\n      {!item.id && (\r\n        <button id=\"Agregar\" class=\"btn btn-primary\" onClick={onAdd}>\r\n          Agregar\r\n        </button>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default FormTodo;\r\n"]},"metadata":{},"sourceType":"module"}